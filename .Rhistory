data <- data.frame(a = 1:5)
library(readxl)
fertility <- read_excel("data/fertility.xls")
View(fertility)
library(readxl)
laborforce <- read_excel("data/laborforce.xls")
View(laborforce)
fertility_new <- t(fertility)
View(fertility_new)
fertility_new <- as.data.frame(fertility_new)
colnames(fertility_new)
View(fertility_new)
fertility_new["Country Code",]
colnames(fertility_new) <- fertility_new["Country Code",]
fertility_new <- fertility_new[-("Country Code",)]
fertility_new <- fertility_new[-(2,)]
fertility_new <- fertility_new[- "Country Code",]
fertility_new <- fertility_new[-2,]
colnames(fertility_new)[1] <- "Year"
library(readxl)
#Importing the necessary dataset
fertility <- read_excel("data/fertility.xls")
laborforce <- read_excel("data/laborforce.xls")
#creating
fertility_new <- t(fertility)
fertility_new <- as.data.frame(fertility_new)
colnames(fertility_new)
fertility_new["Country Code",]
colnames(fertility_new) <- fertility_new["Country Code",]
#fertility_new <- fertility_new[-2,]
colnames(fertility_new)
colnames(fertility_new)[0]
fertility_new <- data.frame(year = NA, fertility_new)
View(fertility_new)
fertility_new$year <- seq(1956, 2024)
fertility_new$year <- seq(1956, 2023)
row_names(fertility_new)
laborforce <- read_excel("data/laborforce.xls", row.names = NULL)
View(fertility_new)
View(laborforce)
fertility_new <- fertility_new[-1:4,]
fertility_new <- fertility_new[-1:-4,]
library(dplyr)
library(dplyr)
colnames(fertility_new) <- fertility_new[paste0("Country Code", "FR")]
library(readxl)
library(dplyr)
#Importing the necessary dataset
fertility <- read_excel("data/fertility.xls")
laborforce <- read_excel("data/laborforce.xls")
#creating transpose so that we have country-wise, and, year-wise data
fertility_new <- t(fertility)
fertility_new <- as.data.frame(fertility_new)
library(readxl)
library(dplyr)
#Importing the necessary dataset
fertility <- read_excel("data/fertility.xls")
laborforce <- read_excel("data/laborforce.xls")
View(fertility)
help (pivot_longer)
fertility$`Indicator Name` <- NULL
fertility$`Indicator Code` <- NULL
colnames(fertility_new)
colnames(fertility)
install.packages('tidyr')
library(tidyr)
fertility_new <- fertility %>%
pivot_longer(cols = !c(Country Name, Country Code), names_to = 'year', values_to = 'Fertility_rate')
library(dplyr)
install.packages('tidyverse')
library(tidyverse)
fertility_new <- fertility %>%
pivot_longer(cols = !c(Country Name, Country Code), names_to = 'year', values_to = 'Fertility_rate')
fertility_new <- fertility %>%
pivot_longer(cols = !c(Country Name, Country Code), names_to = 'year', values_to = 'Fertility_rate')
fertility_new <- fertility %>%
pivot_longer(cols = !c(`Country Name`, `Country Code`), names_to = 'year', values_to = 'Fertility_rate')
View(fertility_new)
View(laborforce)
laborforce$`Indicator Code` <- NULL
laborforce_new <- laborforce %>%
pivot_longer(cols = !c(`Country Name`, `Country Code`), names_to = 'year', values_to = 'LFP')
laborforce_new <- laborforce %>%
pivot_longer(cols = !c(`Country Name`, `Country Code`), names_to = 'year', values_to = 'LFP')
View(laborforce)
View(fertility)
laborforce_new <- laborforce %>%
pivot_longer(cols = !c(`Country Name`, `Country Code`), names_to = 'year', values_to = 'LFP')
#same thing for female labor force participation
laborforce$`Indicator Name` <- NULL
laborforce$`Indicator Code` <- NULL
laborforce_new <- laborforce %>%
pivot_longer(cols = !c(`Country Name`, `Country Code`), names_to = 'year', values_to = 'LFP')
View(laborforce_new)
merged_data <- inner_join(fertility_new, laborforce_new, by = c ("Country Code", "year"))
View(merged_data)
colnames(merged_data)[colnames(merged_data) == "Country Name.x"] <- "Country Name"
merged_data <- merged_data %>%
rename( `try`=`Country Name.y`)
merged_data <- merged_data %>%
rename( `try`=`Country Name.y`) %>%
select(-"try")
merged_data <- merged_data %>%
rename( `try`=`Country Name.y`) %>%
merged_data <- merged_data %>%
select(-"try")
merged_data <- merged_data %>%
rename( `try`=`Country Name.y`) %>%
merged_data <- merged_data %>%
select(-"try")
merged_data <- merged_data %>%
select(-"try")
#Let's keep only the countries that are necessary
merged_data <- merged_data %>%
filter(`Country Code` %in% c("PAK", "NPL", "BGD", "KOR", "SYR", "JOR", "LSO", "LKA",
"SDN", "THA", "FJI", "MYS", "DOM", "KEN", "MEX", "IDN",
"PER", "GUY", "TTO", "COL", "PRY", "CRI", "PAN", "PHL",
"HTI", "VEN", "JAM"))
typeof(year)
typeof(merged_data$year)
merged_data$year <- as.integer(merged_data$year)
merged_data <- merged_data %>%
filter(year >= 1980)
ggplot(data = merged_data, aes(x = year, y = LFP, colour = `Country Name`))+
geom_line(size = 1)+
theme_minimal()
merged_data <- merged_data %>%
filter(year >= 1990)
ggplot(data = merged_data, aes(x = year, y = LFP, colour = `Country Name`))+
geom_line(size = 1)+
theme_minimal()
#The graph is not informative enough, so categorise it based on son-preference group
merged_data <- merged_data %>%
mutate(category = case_when(
`Country Code` %in% c("PAK", "NPL", "BGD", "KOR", "SYR")~ 1,
`Country Code` %in% c("LSO", "LKA", "SDN", "THA", "FJI", "MYS", "DOM", "MEX")~ 2,
`Country Code` %in% c("KEN", "IDN","PER", "GUY", "TTO", "COL", "PRY", "CRI", "PAN", "PHL", "HTI") ~ 3,
`Country Code` %in% c("VEN", "JAM") ~ 4,
TRUE ~ 5
))
conames(merged_data)
colnames(merged_data)
help("facet_wrap")
ggplot(merged_data, aes(x = year, y = `Fertility_rate`, colour = category)) +
geom_line()+
geom_point()+
facet_wrap(~category, scales = "free_y")
ggplot(merged_data, aes(x = year, y = `Fertility_rate`, colour = `Country Name`)) +
geom_line()+
geom_point()+
facet_wrap(~category, scales = "free_y")
merged_data$category == 5
#The graph is not informative enough, so categorise it based on son-preference group
merged_data <- merged_data %>%
mutate(category = case_when(
`Country Code` %in% c("PAK", "NPL", "BGD", "KOR", "SYR", "JOR")~ 1,
`Country Code` %in% c("LSO", "LKA", "SDN", "THA", "FJI", "MYS", "DOM", "MEX")~ 2,
`Country Code` %in% c("KEN", "IDN","PER", "GUY", "TTO", "COL", "PRY", "CRI", "PAN", "PHL", "HTI") ~ 3,
`Country Code` %in% c("VEN", "JAM") ~ 4,
TRUE ~ 5
))
ggplot(merged_data, aes(x = year, y = `Fertility_rate`, colour = `Country Name`)) +
geom_line()+
geom_point()+
facet_wrap(~category, scales = "free_y")
strong_son <- merged_data %>%
filter(category == 1)
ggplot(strong_son, aes(x = year, y = `Fertility_rate`, colour = `Country Name`)) +
geom_line()+
geom_point()+
facet_wrap(~category, scales = "free_y")
ggplot(merged_data, aes(x = year, y = `Fertility_rate`, colour = `Country Name`)) +
geom_line()+
geom_point()+
facet_wrap(~`Country Name`, scales = "free_y")
ggplot(strong_son, aes(x = year, y = `Fertility_rate`, colour = `Country Name`)) +
geom_line()+
geom_point()+
facet_wrap(~`Country Name`, scales = "free_y")
strong_son_long <- strong_son %>%
gather(key = c("Country Name", "Country Code", values = "value", Fertility_rate, LFP))
strong_son_long <- strong_son %>%
gather(key = c("Country Name", "Country Code", values = "value", Fertility_rate, LFP))
strong_son_long <- strong_son %>%
gather(key = c("variables", values = "value", Fertility_rate, LFP))
strong_son_long <- strong_son %>%
gather(key = "variables", values = "value", Fertility_rate, LFP))
strong_son_long <- strong_son %>%
gather(key = "variables", values = "value", Fertility_rate, LFP)
strong_son_long <- strong_son %>%
gather("variables", "values", Fertility_rate, LFP)
View(strong_son_long)
ggplot(strong_son_long, aes(x = year, y = value, colour = `Country Name`, group = variable)) +
geom_line() +
geom_point() +
facet_wrap(~category, scales = "free_y") +
scale_colour_manual(values = c("blue", "green"), labels = c("Fertility Rate", "Labor Force Participation")) +  # Custom colors
labs(title = "Fertility Rate and Labor Force Participation Over Time",
x = "Year",
y = "Value") +
theme_minimal() +
theme(legend.position = "top")
ggplot(strong_son_long, aes(x = year, y = value, colour = `Country Name`, group = variables)) +
geom_line() +
geom_point() +
facet_wrap(~category, scales = "free_y") +
scale_colour_manual(values = c("blue", "green"), labels = c("Fertility Rate", "Labor Force Participation")) +  # Custom colors
labs(title = "Fertility Rate and Labor Force Participation Over Time",
x = "Year",
y = "Value") +
theme_minimal() +
theme(legend.position = "top")
ggplot(strong_son_long, aes(x = year, y = value, colour = `Country Name`, group = variables)) +
geom_line() +
geom_point() +
facet_wrap(~ `Country Name`, scales = "free_y")
ggplot(strong_son_long, aes(x = year, y = values, colour = `Country Name`, group = variables)) +
geom_line() +
geom_point() +
facet_wrap(~ `Country Name`, scales = "free_y")
ggplot(strong_son_long, aes(x = year, y = values, colour = `Country Name`, group = variables)) +
geom_line() +
geom_point() +
facet_wrap(~ `Country Name`, scales = "free_y")+
scale_colour_manual(values = c("blue", "green"), labels = c("Fertility Rate", "Labor Force Participation")) +  # Custom colors
labs(title = "Fertility Rate and Labor Force Participation Over Time",
x = "Year",
y = "Value") +
theme_minimal() +
theme(legend.position = "top")
